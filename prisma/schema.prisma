generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Hobby {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("hobbiles")
}

model Profile {
 id String @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  age       Int?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  Images    Image[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  images    Image[]
  imageId   Int?
  email     String   @unique
  username  String   @unique
  firstName String?
  lastName  String?
  roles     Role[]
  isAdmin   Boolean  @default(false)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profileId Int?
  profile   Profile?

  @@map("users")
}

model Image {
   id String @id @default(auto()) @map("_id") @db.ObjectId
  url String

  User      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String?
  Profile   Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("images")
}

enum Role {
  ADMIN
  USER
}
